// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.modular;

using fuchsia.modular.auth;

/// Given by the `Basemgr` to the `BaseShell` at Initialize() so the
/// `BaseShell` can get information about the users of this device from the
/// `Basemgr`, and act on the provided information (including extending the
/// user database).
protocol UserProvider {
    /// DEPRECATED: This method is not supported. Calling it will always return
    /// an error.
    [Transitional]
    AddUser(fuchsia.modular.auth.IdentityProvider identity_provider)
        -> (fuchsia.modular.auth.Account? account, string? error_code);

    /// DEPRECATED: This method is not supported. Calling it will have no effect.
    [Transitional]
    RemoveUser(string account_id) -> (string? error_code);

    /// DEPRECATED: For transitional purposes only.
    [Transitional]
    Login(UserLoginParams user_login_params);

    /// DEPRECATED: For transitional purposes only.
    [Transitional]
    Login2(UserLoginParams2 user_login_params);

    /// Starts a new user session, either using a random ephemeral account or
    /// the only persistent account on the current device, creating this
    /// persistent account if necessary.
    [Transitional]
    Login3(bool is_ephemeral_account);

    /// DEPRECATED: This method is not supported. If called it will always
    /// return an empty vector.
    [Transitional]
    PreviousUsers() -> (vector<fuchsia.modular.auth.Account> accounts);
};

/// DEPRECATED, for backwards compatibility only
struct UserLoginParams {
    /// `account_id` is received from either AddUser() or PreviousUsers(). It
    /// can be NULL which means logging-in using incognito mode.
    string? account_id;
};

/// DEPRECATED, for backwards compatibility only
struct UserLoginParams2 {
    /// `account_id` is received from either AddUser() or PreviousUsers(). It
    /// can be NULL which means logging-in in an incognito mode.
    string? account_id;
};
