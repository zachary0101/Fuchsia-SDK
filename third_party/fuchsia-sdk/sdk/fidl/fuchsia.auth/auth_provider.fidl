// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.auth;

using fuchsia.ui.views;

// This file defines an auth provider service that can be used by Garnet's
// Token Manager service to mint oauth tokens for clients such as Framework,
// Ledger, gmail or chat module.

/// Stores attributes related to a firebase auth token for a given firebase api
/// key.
///
/// These tokens are minted by Firebase Auth server and are meant to be used for
/// authorizing users into Firebase services such as DB and storage.
struct FirebaseToken {
    /// Use this as the auth token in firebase database and storage requests.
    string id_token;

    /// Use this to uniquely identify users.
    string? local_id;

    /// Use this to uniquely identify user's email address provided by the
    /// Auth Provider Firebase server.
    string? email;

    /// The remaining lifetime of the token in seconds.
    uint64 expires_in;
};

/// User attributes returned to callers on authorizing a new user at any auth
/// provider. These attributes are generated by calling the auth provider's
/// user profile apis.
struct UserProfileInfo {
    /// User identifier returned by the backend identity provider server to
    /// identify the user after successful authorization. Some identity providers
    /// send verified email address as the identifier, and some send an opaque
    /// string as the user identifier.
    string id;

    /// The name that is displayed on the base shell while logging in. Display
    /// name is fetched from user profile attributes as configured by the user at
    /// the given identity provider.
    string? display_name;

    /// User's profile url that is used by the base shell while logging in.
    /// Profile url is fetched from user profile attributes as configured by the
    /// user at the given identity provider.
    string? url;

    /// User's profile image url that is used by the base shell while logging in.
    /// Profile image url is fetched from user profile attributes as configured by
    /// the user at the given identity provider.
    string? image_url;
};

/// This interface is implemented by base shell. It is used to notify the
/// base shell that a view for login needs to be started / stopped.
protocol AuthenticationUIContext {
    /// Requests base shell to display `view_holder_token` for authentication.
    /// Another call to StartOverlay() will not be made until StopOverlay()
    /// has been called.
    StartOverlay(fuchsia.ui.views.ViewHolderToken view_holder_token);

    /// Requests base shell to stop displaying the auth view.
    StopOverlay();
};
