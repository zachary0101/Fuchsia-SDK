# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# DO NOT MANUALLY EDIT!
# Generated by //scripts/sdk/gn/generate.py.

import("../../../fuchsia_sdk_pkg.gni")

fuchsia_sdk_pkg("fidl_cpp") {
  sources = [
        "internal/message_handler.cc",
        "internal/message_reader.cc",
        "internal/pending_response.cc",
        "internal/proxy.cc",
        "internal/proxy_controller.cc",
        "internal/stub.cc",
        "internal/stub_controller.cc",
        "internal/weak_stub_controller.cc",
        "include/lib/fidl/cpp/binding.h",
        "include/lib/fidl/cpp/binding_set.h",
        "include/lib/fidl/cpp/enum.h",
        "include/lib/fidl/cpp/event_sender.h",
        "include/lib/fidl/cpp/interface_ptr.h",
        "include/lib/fidl/cpp/interface_ptr_set.h",
        "include/lib/fidl/cpp/internal/header.h",
        "include/lib/fidl/cpp/internal/implementation.h",
        "include/lib/fidl/cpp/internal/message_handler.h",
        "include/lib/fidl/cpp/internal/message_reader.h",
        "include/lib/fidl/cpp/internal/pending_response.h",
        "include/lib/fidl/cpp/internal/proxy.h",
        "include/lib/fidl/cpp/internal/proxy_controller.h",
        "include/lib/fidl/cpp/internal/stub.h",
        "include/lib/fidl/cpp/internal/stub_controller.h",
        "include/lib/fidl/cpp/internal/weak_stub_controller.h",
        "include/lib/fidl/cpp/member_connector.h",
        "include/lib/fidl/cpp/optional.h",
        "include/lib/fidl/cpp/service_connector.h",
        "include/lib/fidl/cpp/service_handler_base.h",
        "include/lib/fidl/cpp/thread_safe_binding_set.h",
        "include/lib/fidl/cpp/type_converter.h",
  ]
  include_dirs = [ "include" ]
  public_deps = [ 
        "../async",
        "../async-default",
        "../fidl",
        "../fidl-async",
        "../fidl_cpp_sync",
        "../fit",
        "../zx",
  ]
}
